# Workflow for the OSSF Scorecards Action
# https://github.com/ossf/scorecard-action#installation
name: Scorecard supply-chain security
on:
  # Manual trigger only from any branch/environment
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run scorecard on'
        required: false
        default: 'main'
      environment:
        description: 'Environment to run in'
        required: false
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production
# Declare default permissions as read only.
permissions: read-all
jobs:
  analysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Needed to publish results and get a badge (see publish_results below).
      id-token: write
      # Needed to commit reports folder
      contents: write
    steps:
      - name: "Checkout code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}
          persist-credentials: false
          
      - name: "Run analysis"
        uses: ossf/scorecard-action@f49aabe0b5af0936a0987cfb85d86b75731b0186 # v2.4.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: false  # Set to false when running from non-default branch
          # (Optional) Uncomment file_mode if you have a .gitattributes with files marked export-ignore
          # file_mode: git
          
      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5
          
      # Upload the results to GitHub's code scanning dashboard (optional).
      # Commenting out will disable upload of results to your repo's Code Scanning dashboard
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          
      # Upload to DefectDojo
      - name: "Upload to DefectDojo"
        run: |
          TIMESTAMP=$(date +%Y-%m-%d)
          
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
            -H "accept: application/json" \
            -F "scan_type=SARIF" \
            -F "file=@results.sarif" \
            -F "engagement=${{ secrets.DEFECTDOJO_SCORECARD_ENGAGEMENT_ID }}" \
            -F "scan_date=${TIMESTAMP}" \
            -F "active=true" \
            -F "verified=false" \
            -F "minimum_severity=Info" \
            -F "close_old_findings=true" \
            -F "push_to_jira=false" \
            -F "test_title=OSSF Scorecard Scan - ${TIMESTAMP}"
        continue-on-error: true
        
      - name: "DefectDojo upload status"
        if: success()
        run: echo "Successfully uploaded SARIF report to DefectDojo"
